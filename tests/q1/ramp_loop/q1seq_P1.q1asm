waveforms={
    '_ramp_180':{
        'data':
            [  0.00000,  0.00556,  0.01111,  0.01667,  0.02222,  0.02778,
               0.03333,  0.03889,  0.04444,  0.05000,  0.05556,  0.06111,
               0.06667,  0.07222,  0.07778,  0.08333,  0.08889,  0.09444,
               0.10000,  0.10556,  0.11111,  0.11667,  0.12222,  0.12778,
               0.13333,  0.13889,  0.14444,  0.15000,  0.15556,  0.16111,
               0.16667,  0.17222,  0.17778,  0.18333,  0.18889,  0.19444,
               0.20000,  0.20556,  0.21111,  0.21667,  0.22222,  0.22778,
               0.23333,  0.23889,  0.24444,  0.25000,  0.25556,  0.26111,
               0.26667,  0.27222,  0.27778,  0.28333,  0.28889,  0.29444,
               0.30000,  0.30556,  0.31111,  0.31667,  0.32222,  0.32778,
               0.33333,  0.33889,  0.34444,  0.35000,  0.35556,  0.36111,
               0.36667,  0.37222,  0.37778,  0.38333,  0.38889,  0.39444,
               0.40000,  0.40556,  0.41111,  0.41667,  0.42222,  0.42778,
               0.43333,  0.43889,  0.44444,  0.45000,  0.45556,  0.46111,
               0.46667,  0.47222,  0.47778,  0.48333,  0.48889,  0.49444,
               0.50000,  0.50556,  0.51111,  0.51667,  0.52222,  0.52778,
               0.53333,  0.53889,  0.54444,  0.55000,  0.55556,  0.56111,
               0.56667,  0.57222,  0.57778,  0.58333,  0.58889,  0.59444,
               0.60000,  0.60556,  0.61111,  0.61667,  0.62222,  0.62778,
               0.63333,  0.63889,  0.64444,  0.65000,  0.65556,  0.66111,
               0.66667,  0.67222,  0.67778,  0.68333,  0.68889,  0.69444,
               0.70000,  0.70556,  0.71111,  0.71667,  0.72222,  0.72778,
               0.73333,  0.73889,  0.74444,  0.75000,  0.75556,  0.76111,
               0.76667,  0.77222,  0.77778,  0.78333,  0.78889,  0.79444,
               0.80000,  0.80556,  0.81111,  0.81667,  0.82222,  0.82778,
               0.83333,  0.83889,  0.84444,  0.85000,  0.85556,  0.86111,
               0.86667,  0.87222,  0.87778,  0.88333,  0.88889,  0.89444,
               0.90000,  0.90556,  0.91111,  0.91667,  0.92222,  0.92778,
               0.93333,  0.93889,  0.94444,  0.95000,  0.95556,  0.96111,
               0.96667,  0.97222,  0.97778,  0.98333,  0.98889,  0.99444],
        'index':0,
        },
    '_ramp_80':{
        'data':
            [  0.00000,  0.01250,  0.02500,  0.03750,  0.05000,  0.06250,
               0.07500,  0.08750,  0.10000,  0.11250,  0.12500,  0.13750,
               0.15000,  0.16250,  0.17500,  0.18750,  0.20000,  0.21250,
               0.22500,  0.23750,  0.25000,  0.26250,  0.27500,  0.28750,
               0.30000,  0.31250,  0.32500,  0.33750,  0.35000,  0.36250,
               0.37500,  0.38750,  0.40000,  0.41250,  0.42500,  0.43750,
               0.45000,  0.46250,  0.47500,  0.48750,  0.50000,  0.51250,
               0.52500,  0.53750,  0.55000,  0.56250,  0.57500,  0.58750,
               0.60000,  0.61250,  0.62500,  0.63750,  0.65000,  0.66250,
               0.67500,  0.68750,  0.70000,  0.71250,  0.72500,  0.73750,
               0.75000,  0.76250,  0.77500,  0.78750,  0.80000,  0.81250,
               0.82500,  0.83750,  0.85000,  0.86250,  0.87500,  0.88750,
               0.90000,  0.91250,  0.92500,  0.93750,  0.95000,  0.96250,
               0.97500,  0.98750],
        'index':1,
        },
    }

weights={
    }

acquisitions={}

seq_prog="""
# --INIT-- 
           move           2,R1       # L0001 R1: _repetitions
           move           0,R0       # L0002 R0: always 0 register
           wait_sync      4          # L0003 t=0
# --START-- (t=0) 
_start:    reset_ph                  # L0004 @ 0
# R.v_ramp1:float = 0.2 
           move           429496729,R2 # L0005 R2: R.v_ramp1
# block_pulse(100, -0.1, None) 
# awg_offset = -0.1, None t=0 
           set_awg_offs   -3277,0    # L0006 @ 0
           upd_param      100        # L0007 t=0
# awg_offset = 0.0, None t=100 
# ------:  set_awg_offs   0,0        # @ 100 = overwritten =
# block_pulse(40, 0.5, None) 
# awg_offset = 0.5, None t=100 
# -- Overwrites set_awg_offs at 100 -- 
           set_awg_offs   16383,0    # L0008 @ 100
           upd_param      40         # L0009 t=100
# awg_offset = 0.0, None t=140 
           set_awg_offs   0,0        # L0010 @ 140
           upd_param      140        # L0011 t=140
# loop_linspace(-0.5, 0.5, 5):R._var0 t=280 
           move           3221225472,R3 # L0012 R3: R._var0
           move           5,R4       # L0013 R4: R._cnt0
loop_0:    upd_param      120        # L0014 t=280
# ramp(360, 0.0, R._var0) 
# Rs._ramp_step:float = R._var0 - 0.0 
           sub            R3,0,R5    # L0015 R5: Rs._ramp_step
# Rs._ramp_step:float = Rs._ramp_step >> 1 
#          --- emulate signed ASR 
           nop                       # L0016  and wait for R5
           and            R5,2147483648,R6 # L0017 temp R6
           asr            R5,1,R5    # L0018 
           jlt            R6,2147483648,@asr_end0 # L0019 
           or             R5,3221225472,R5 # L0020 
# Rs._ramp_offset:float = 0.0 
asr_end0:  move           0,R6       # L0021 R6: Rs._ramp_offset
# awg_gain = Rs._ramp_step, None t=400 
           asr            R5,16,R7   # L0022 temp R7
           nop                       # L0023  set_awg_gain wait for R7
           set_awg_gain   R7,R0      # L0024 @ 400
# repeat(2): t=400 
           move           2,R7       # L0025 R7: Rs._cnt0
# awg_offset = Rs._ramp_offset, None t=400 
local_0:   asr            R6,16,R8   # L0026 temp R8
           nop                       # L0027  set_awg_offs wait for R8
           set_awg_offs   R8,R0      # L0028 @ 400
# play _ramp_180 None t=400 
           play           0,0,180    # L0029 t=400
# Rs._ramp_offset:float = Rs._ramp_offset + Rs._ramp_step 
           add            R6,R5,R6   # L0030 
# endloop t=580 
           loop           R7,@local_0 # L0031 
#     --- loop duration: 360 
# awg_offset = 0.0, None t=760 
# ------:  set_awg_offs   0,0        # @ 760 = overwritten =
# ramp(80, R._var0, 0.0) 
# awg_gain = 0.0 - R._var0, None t=760 
           move           0,R8       # L0032 temp ['R8']
           nop                       # L0033  sub wait for R8
           sub            R8,R3,R7   # L0034 
           nop                       # L0035  asr wait for R7
           asr            R7,16,R8   # L0036 temp R8
           nop                       # L0037  set_awg_gain wait for R8
           set_awg_gain   R8,R0      # L0038 @ 760
# awg_offset = R._var0, None t=760 
           asr            R3,16,R7   # L0039 temp R7
# -- Overwrites set_awg_offs at 760 -- 
           nop                       # L0040  set_awg_offs wait for R7
           set_awg_offs   R7,R0      # L0041 @ 760
# play _ramp_80 None t=760 
           play           1,1,80     # L0042 t=760
# awg_offset = 0.0, None t=840 
           set_awg_offs   0,0        # L0043 @ 840
           upd_param      60         # L0044 t=840
# endloop t=900 
           add            R3,536870911,R3 # L0045 
           loop           R4,@loop_0 # L0046 
           upd_param      100        # L0047 t=900
# --END-- 
           loop           R1,@_start # L0048 
           upd_param      4          # L0049 t=1000
           stop                      # L0050 
"""

