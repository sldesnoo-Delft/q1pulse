{"waveforms": {}, "weights": {}, "acquisitions": {}, "program": "           wait_sync      4          # L0001 \n           reset_ph                  # L0002 @ 0\n_start:    upd_param      1000       # L0003 t=0\n           set_awg_offs   0,0        # L0004 @ 1000\n           upd_param      4          # L0005 t=1000\n           move           10,R1      # L0006 R1: R.a\n           nop                       # L0007  add wait for R1\n           add            R1,1,R2    # L0008 R2: R.b\n           add            R1,5,R3    # L0009 temp R3\n           nop                       # L0010  add wait for R3\n           add            R3,1,R2    # L0011 \n           nop                       # L0012  add wait for R2\n           add            R2,R1,R3   # L0013 R3: R.c\n           nop                       # L0014  add wait for R3\n           add            R3,5,R3    # L0015 \n           nop                       # L0016  sub wait for R3\n           sub            R3,17,R3   # L0017 \n           move           1,R5       # L0018 temp ['R5']\n           nop                       # L0019  sub wait for R5\n           sub            R5,R1,R4   # L0020 \n           asl            R1,2,R5    # L0021 R5: R.e\n           and            R1,2147483648,R7 # L0022 temp R7\n           asr            R1,2,R6    # L0023 \n           jlt            R7,2147483648,@asr_end0 # L0024 \n           or             R6,3758096384,R6 # L0025 \nasr_end0:  and            R4,2147483648,R8 # L0026 temp R8\n           asr            R4,2,R7    # L0027 \n           jlt            R8,2147483648,@asr_end1 # L0028 \n           or             R7,3758096384,R7 # L0029 \nasr_end1:  move           2147483647,R8 # L0030 R8: R.x\n           nop                       # L0031  sub wait for R8\n           sub            R8,1717986918,R8 # L0032 \n           move           1073741823,R9 # L0033 R9: R.y\n           nop                       # L0034  sub wait for R9\n           sub            R8,R9,R10  # L0035 R10: R.z\n           move           9,R11      # L0036 R11: Rs.x\n           nop                       # L0037  add wait for R11\n           add            R11,R2,R12 # L0038 R12: Rs.y\n           move           3,R13      # L0039 R13: Rs.a\n           nop                       # L0040  and wait for R13\n           and            R13,5,R14  # L0041 R14: Rs.b\n           or             R13,5,R15  # L0042 R15: Rs.c\n           xor            R13,5,R16  # L0043 R16: Rs.d\n           not            R13,R17    # L0044 R17: Rs.e\n           stop                      # L0045 "}