waveforms={
    }

weights={
    }

acquisitions={}

seq_prog="""
# --INIT-- 
           move           0,R0       # L0001 R0: _zero
           move           3,R1       # L0002 R1: _repetitions
           wait_sync      100        # L0003 t=0
# --START-- (t=0) 
_start:    reset_ph                  # L0004 @ 0
           upd_param      200        # L0005 t=0
# loop_range(20, 100, 20):R._var0 t=200 
           move           20,R2      # L0006 R2: R._var0
           move           4,R3       # L0007 R3: R._cnt0
loop_0:    upd_param      20         # L0008 t=200
# wait(R._var0) t=220 
           move           R2,R4      # L0009 R4: _waittime
#          --- check for negative wait time 
#          --- emulate signed wait time 
           nop                       # L0010  xor wait for R4
           xor            R4,2147483648,R5 # L0011 temp ['R5']
           nop                       # L0012  jge wait for R5
           jge            R5,2147483652,@waitc1 # L0013 
           illegal                   # L0014 negative wait time
waitc1:    jlt            R4,65532,@endwait1 # L0015 
wait1:     wait           65528      # L0016 
           sub            R4,65528,R4 # L0017 
           nop                       # L0018  jge wait for R4
           jge            R4,65532,@wait1 # L0019 
endwait1:  wait           R4         # L0020 
# block_pulse(20, 0.6, None) 
# awg_offset = None, 0.6 t=220 
           set_awg_offs   0,19660    # L0021 @ 220
           upd_param      20         # L0022 t=220
# awg_offset = None, 0.0 t=240 
           set_awg_offs   0,0        # L0023 @ 240
           upd_param      200        # L0024 t=240
# endloop t=440 
           add            R2,20,R2   # L0025 
           loop           R3,@loop_0 # L0026 
# loop_range(-2, 2, 1):R._var1 t=440 
           move           4294967294,R2 # L0027 R2: R._var1
           move           4,R3       # L0028 R3: R._cnt1
loop_1:    upd_param      120        # L0029 t=440
# endloop t=560 
           add            R2,1,R2    # L0030 
           loop           R3,@loop_1 # L0031 
           upd_param      100        # L0032 t=560
# loop_range(80, 0, -20):R._var2 t=660 
           move           80,R2      # L0033 R2: R._var2
           move           5,R3       # L0034 R3: R._cnt2
loop_2:    upd_param      20         # L0035 t=660
# wait(R._var2 + 20) t=680 
           add            R2,20,R4   # L0036 temp R4
           nop                       # L0037  move wait for R4
           move           R4,R5      # L0038 R5: _waittime
#          --- check for negative wait time 
#          --- emulate signed wait time 
           nop                       # L0039  xor wait for R5
           xor            R5,2147483648,R6 # L0040 temp ['R6']
           nop                       # L0041  jge wait for R6
           jge            R6,2147483652,@waitc2 # L0042 
           illegal                   # L0043 negative wait time
waitc2:    jlt            R5,65532,@endwait2 # L0044 
wait2:     wait           65528      # L0045 
           sub            R5,65528,R5 # L0046 
           nop                       # L0047  jge wait for R5
           jge            R5,65532,@wait2 # L0048 
endwait2:  wait           R5         # L0049 
# endloop t=680 
           add            R2,4294967276,R2 # L0050 
           loop           R3,@loop_2 # L0051 
# --END-- 
           loop           R1,@_start # L0052 
           upd_param      4          # L0053 t=680
           stop                      # L0054 
"""

